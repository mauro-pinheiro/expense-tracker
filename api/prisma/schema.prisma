generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model failed_jobs {
    id         Int      @id @default(autoincrement())
    uuid       String   @unique
    connection String
    queue      String
    payload    String
    exception  String
    failed_at  DateTime @default(now())
}

model migrations {
    id        Int    @id @default(autoincrement())
    migration String
    batch     Int
}

model User {
    id                Int           @id @default(autoincrement())
    email             String        @unique
    email_verified_at DateTime?
    password          String
    remember_token    String?
    created_at        DateTime?
    updated_at        DateTime?
    name              String
    uuid              String
    Transaction       Transaction[]

    @@map("users")
}

model Transaction {
    id                    Int                 @id @default(autoincrement())
    amount                Int
    created_at            DateTime?
    updated_at            DateTime?
    userId                Int
    transactionCategoryId Int
    uuid                  String
    category              TransactionCategory @relation(fields: [transactionCategoryId], references: [id])
    user                  User                @relation(fields: [userId], references: [id])

    @@index([transactionCategoryId], name: "transactionCategoryId")
    @@index([userId], name: "userId")
    @@map("transactions")
}

model TransactionType {
    id                  Int                   @id @default(autoincrement())
    name                String
    uuid                String
    created_at          DateTime?
    updated_at          DateTime?
    TransactionCategory TransactionCategory[]

    @@map("transaction_types")
}

model TransactionCategory {
    id                Int             @id @default(autoincrement())
    name              String
    created_at        DateTime?
    updated_at        DateTime?
    transactionTypeId Int
    uuid              String
    type              TransactionType @relation(fields: [transactionTypeId], references: [id])
    Transaction       Transaction[]

    @@index([transactionTypeId], name: "transactionTypeId")
    @@map("transaction_categories")
}

model PersonalAccessToken {
    id             Int       @id @default(autoincrement())
    tokenable_type String
    tokenable_id   Int
    name           String
    token          String    @unique
    abilities      String?
    last_used_at   DateTime?
    created_at     DateTime?
    updated_at     DateTime?

    @@index([tokenable_type, tokenable_id], name: "personal_access_tokens_tokenable_type_tokenable_id_index")
    @@map("personal_access_tokens")
}
